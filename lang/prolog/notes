和SQL一样，prolog基于数据库，但是其数据由逻辑规则和关系组成
和SQL一样，prolog包含两个部分：
    一部分用于描述数据
    一部分用于查询数据
数据以逻辑规则的形式存在

事实：事实是关于真实世界的基本断言
规则：规则是关于真实世界中一些事实的推论
查询：查询是关于真实世界的一个问题
事实和规则被放入一个知识库（knowledge base）

如果一个词以小写字母开头，它就是一个原子(atom),一个类似ruby symbol的固定值
如果一个词以大写字母或下划线开头，就是一个变量

变量的值可以改变，但原子不能

在friends.pl中
:- 右边
1. \+ 执行逻辑反操作，这样 \+(X = Y)的意思就是X不等于Y

friend(X, Y) :- \+(X = Y), likes(X, Z), likes(Y, Z).

上述代码是一个具有三个变量X、Y、Z的Prolog规则，这个规则称作friend/2，即有两个参数的friend规则的缩写。这个规则拥有三个用逗号分隔的子目标，当所有子目标都为真时，这个规则才为真。

为了方便起见，如果在剩余部分中Prolog检测不到其他的可选项，将返回yes，如果Prolog在未经更多计算的情况下不能立即断定是否还有更多选项，就会提示查询下一个并返回no。

在food.pl中
food_flavor是一个规则，不是一个事实。我们请求Prolog找出满足“什么食物具有savory味道？”这个查询的所有可能值，Prolog必须将关于食物、类型和味道的基本信息联系在一起才能得出最终结论，逻辑引擎需要遍历所有使目标为真的可能组合。

Prolog通过事实和推论来表达逻辑，然后直接提问即可。Prolog不是通过算法来解决逻辑问题的，而是通过如实的描述真实世界，来呈现计算机可以设法解决的逻辑问题。

2. unification

